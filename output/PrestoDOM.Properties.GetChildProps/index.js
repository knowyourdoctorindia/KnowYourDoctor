// Generated by purs version 0.11.7
"use strict";
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_StrMap = require("../Data.StrMap");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop");
var Prelude = require("../Prelude");
var PrestoDOM_Types_Core = require("../PrestoDOM.Types.Core");
var fromGenProp = function (dictIsProp) {
    return function (key) {
        return function ($$default) {
            return function (strMap) {
                var value = Data_StrMap.lookup(key)(strMap);
                if (value instanceof Data_Maybe.Just && value.value0 instanceof PrestoDOM_Types_Core.LengthP) {
                    return Halogen_VDom_DOM_Prop.Property.create(key)(PrestoDOM_Types_Core.toPropValue(PrestoDOM_Types_Core.lengthIsProp)(value.value0.value0));
                };
                if (value instanceof Data_Maybe.Just && value.value0 instanceof PrestoDOM_Types_Core.BooleanP) {
                    return Halogen_VDom_DOM_Prop.Property.create(key)(PrestoDOM_Types_Core.toPropValue(PrestoDOM_Types_Core.booleanIsProp)(value.value0.value0));
                };
                if (value instanceof Data_Maybe.Just && value.value0 instanceof PrestoDOM_Types_Core.IntP) {
                    return Halogen_VDom_DOM_Prop.Property.create(key)(PrestoDOM_Types_Core.toPropValue(PrestoDOM_Types_Core.intIsProp)(value.value0.value0));
                };
                if (value instanceof Data_Maybe.Just && value.value0 instanceof PrestoDOM_Types_Core.StringP) {
                    return Halogen_VDom_DOM_Prop.Property.create(key)(PrestoDOM_Types_Core.toPropValue(PrestoDOM_Types_Core.stringIsProp)(value.value0.value0));
                };
                if (value instanceof Data_Maybe.Just && value.value0 instanceof PrestoDOM_Types_Core.TextP) {
                    return Halogen_VDom_DOM_Prop.Property.create("text")(PrestoDOM_Types_Core.toPropValue(PrestoDOM_Types_Core.stringIsProp)(value.value0.value0));
                };
                if (value instanceof Data_Maybe.Nothing) {
                    return Halogen_VDom_DOM_Prop.Property.create(key)(PrestoDOM_Types_Core.toPropValue(dictIsProp)($$default));
                };
                throw new Error("Failed pattern match at PrestoDOM.Properties.GetChildProps line 129, column 30 - line 135, column 80: " + [ value.constructor.name ]);
            };
        };
    };
};
var gravity_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("gravity");
var hardware_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("hardware");
var height_p = fromGenProp(PrestoDOM_Types_Core.lengthIsProp)("height");
var hintColor_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("hintColor");
var hint_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("hint");
var imageUrl_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("imageUrl");
var inputTypeI_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("inputTypeI");
var inputType_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("inputType");
var layoutTransition_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("layoutTransition");
var layout_gravity_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("layout_gravity");
var letterSpacing_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("letterSpacing");
var lineHeight_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("lineHeight");
var marginEnd_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("marginEnd");
var marginStart_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("marginStart");
var margin_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("margin");
var maxDate_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("maxDate");
var maxLines_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("maxLines");
var maxSeek_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("maxSeek");
var maxWidth_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("maxWidth");
var minDate_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("minDate");
var minHeight_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("minHeight");
var minWidth_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("minWidth");
var orientation_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("orientation");
var override_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp);
var padding_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("padding");
var pivotX_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("pivotX");
var pivotY_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("pivotY");
var progressColor_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("progressColor");
var root_p = fromGenProp(PrestoDOM_Types_Core.booleanIsProp)("root");
var rotationX_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("rotationX");
var rotationY_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("rotationY");
var rotation_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("rotation");
var scaleType_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("scaleType");
var scaleX_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("scaleX");
var scaleY_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("scaleY");
var scrollBarX_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("scrollBarX");
var scrollBarY_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("scrollBarY");
var selectableItem_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("selectableItem");
var selectable_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("selectable");
var selectedTabIndicatorColor_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("selectedTabIndicatorColor");
var selectedTabIndicatorHeight_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("selectedTabIndicatorHeight");
var selected_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("selected");
var setDate_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("setDate");
var shadowLayer_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("shadowLayer");
var showDividers_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("showDividers");
var singleLine_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("singleLine");
var stroke_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("stroke");
var tabTextColors_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("tabTextColors");
var textAllCaps_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("textAllCaps");
var textFromHtml_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("textFromHtml");
var textIsSelectable_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("textIsSelectable");
var textSize_p = fromGenProp(PrestoDOM_Types_Core.intIsProp)("textSize");
var text_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("text");
var toast_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("toast");
var translationX_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("translationX");
var translationY_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("translationY");
var translationZ_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("translationZ");
var typeface_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("typeface");
var url_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("url");
var values_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("values");
var visibility_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("visibility");
var weight_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("weight");
var width_p = fromGenProp(PrestoDOM_Types_Core.lengthIsProp)("width");
var foreground_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("foreground");
var fontStyle_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("fontStyle");
var fontSize_p = fromGenProp(PrestoDOM_Types_Core.intIsProp)("fontSize");
var fontFamily_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("fontFamily");
var focusable_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("focusable");
var focus_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("focus");
var focusOut_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("focusOut");
var fillViewport_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("fillViewport");
var elevation_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("elevation");
var duration_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("duration");
var dividerDrawable_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("dividerDrawable");
var delay_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("delay");
var curve_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("curve");
var cornerRadius_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("cornerRadius");
var color_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("color");
var colorFilter_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("colorFilter");
var clipChildren_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("clipChildren");
var clickable_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("clickable");
var checked_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("checked");
var buttonTint_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("buttonTint");
var btnColor_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("btnColor");
var btnBackground_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("btnBackground");
var background_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("background");
var backgroundTint_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("backgroundTint");
var backgroundDrawable_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("backgroundDrawable");
var backgroundColor_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("backgroundColor");
var alpha_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("alpha");
var adjustViewBounds_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("adjustViewBounds");
var accessibilityHint_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("accessibilityHint");
var a_scaleY_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("a_scaleY");
var a_scaleX_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("a_scaleX");
var a_duration_p = fromGenProp(PrestoDOM_Types_Core.stringIsProp)("a_duration");
module.exports = {
    override_p: override_p,
    root_p: root_p,
    a_duration_p: a_duration_p,
    a_scaleX_p: a_scaleX_p,
    a_scaleY_p: a_scaleY_p,
    accessibilityHint_p: accessibilityHint_p,
    adjustViewBounds_p: adjustViewBounds_p,
    alpha_p: alpha_p,
    background_p: background_p,
    backgroundColor_p: backgroundColor_p,
    backgroundDrawable_p: backgroundDrawable_p,
    backgroundTint_p: backgroundTint_p,
    btnBackground_p: btnBackground_p,
    btnColor_p: btnColor_p,
    buttonTint_p: buttonTint_p,
    checked_p: checked_p,
    clickable_p: clickable_p,
    clipChildren_p: clipChildren_p,
    color_p: color_p,
    colorFilter_p: colorFilter_p,
    cornerRadius_p: cornerRadius_p,
    curve_p: curve_p,
    delay_p: delay_p,
    dividerDrawable_p: dividerDrawable_p,
    duration_p: duration_p,
    elevation_p: elevation_p,
    fillViewport_p: fillViewport_p,
    focus_p: focus_p,
    focusable_p: focusable_p,
    focusOut_p: focusOut_p,
    fontFamily_p: fontFamily_p,
    fontSize_p: fontSize_p,
    fontStyle_p: fontStyle_p,
    foreground_p: foreground_p,
    gravity_p: gravity_p,
    hardware_p: hardware_p,
    height_p: height_p,
    hint_p: hint_p,
    hintColor_p: hintColor_p,
    imageUrl_p: imageUrl_p,
    inputType_p: inputType_p,
    inputTypeI_p: inputTypeI_p,
    layout_gravity_p: layout_gravity_p,
    layoutTransition_p: layoutTransition_p,
    letterSpacing_p: letterSpacing_p,
    lineHeight_p: lineHeight_p,
    margin_p: margin_p,
    marginEnd_p: marginEnd_p,
    marginStart_p: marginStart_p,
    maxDate_p: maxDate_p,
    maxLines_p: maxLines_p,
    maxSeek_p: maxSeek_p,
    maxWidth_p: maxWidth_p,
    minDate_p: minDate_p,
    minHeight_p: minHeight_p,
    minWidth_p: minWidth_p,
    orientation_p: orientation_p,
    padding_p: padding_p,
    pivotX_p: pivotX_p,
    pivotY_p: pivotY_p,
    progressColor_p: progressColor_p,
    rotation_p: rotation_p,
    rotationX_p: rotationX_p,
    rotationY_p: rotationY_p,
    scaleType_p: scaleType_p,
    scaleX_p: scaleX_p,
    scaleY_p: scaleY_p,
    scrollBarX_p: scrollBarX_p,
    scrollBarY_p: scrollBarY_p,
    selectable_p: selectable_p,
    selectableItem_p: selectableItem_p,
    selected_p: selected_p,
    selectedTabIndicatorColor_p: selectedTabIndicatorColor_p,
    selectedTabIndicatorHeight_p: selectedTabIndicatorHeight_p,
    setDate_p: setDate_p,
    shadowLayer_p: shadowLayer_p,
    showDividers_p: showDividers_p,
    singleLine_p: singleLine_p,
    stroke_p: stroke_p,
    tabTextColors_p: tabTextColors_p,
    text_p: text_p,
    textAllCaps_p: textAllCaps_p,
    textFromHtml_p: textFromHtml_p,
    textIsSelectable_p: textIsSelectable_p,
    textSize_p: textSize_p,
    translationX_p: translationX_p,
    translationY_p: translationY_p,
    translationZ_p: translationZ_p,
    toast_p: toast_p,
    typeface_p: typeface_p,
    url_p: url_p,
    values_p: values_p,
    visibility_p: visibility_p,
    weight_p: weight_p,
    width_p: width_p
};
