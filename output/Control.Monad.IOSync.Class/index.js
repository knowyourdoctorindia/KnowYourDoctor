// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Monad_IO = require("../Control.Monad.IO");
var Control_Monad_IOSync = require("../Control.Monad.IOSync");
var Control_Monad_List_Trans = require("../Control.Monad.List.Trans");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans");
var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var MonadIOSync = function (Monad0, liftIOSync) {
    this.Monad0 = Monad0;
    this.liftIOSync = liftIOSync;
};
var monadIOSyncIOSync = new MonadIOSync(function () {
    return Control_Monad_IOSync.monadIOSync;
}, Control_Category.id(Control_Category.categoryFn));
var monadIOSyncIO = new MonadIOSync(function () {
    return Control_Monad_IO.monadIO;
}, function ($10) {
    return Data_Newtype.wrap(Control_Monad_IO.newtypeIO)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Newtype.unwrap(Control_Monad_IOSync.newtypeIOSync)($10)));
});
var liftIOSync = function (dict) {
    return dict.liftIOSync;
};
var monadIOSyncContT = function (dictMonadIOSync) {
    return new MonadIOSync(function () {
        return Control_Monad_Cont_Trans.monadContT(dictMonadIOSync.Monad0());
    }, function ($11) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT)(dictMonadIOSync.Monad0())(liftIOSync(dictMonadIOSync)($11));
    });
};
var monadIOSyncExceptT = function (dictMonadIOSync) {
    return new MonadIOSync(function () {
        return Control_Monad_Except_Trans.monadExceptT(dictMonadIOSync.Monad0());
    }, function ($12) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonadIOSync.Monad0())(liftIOSync(dictMonadIOSync)($12));
    });
};
var monadIOSyncListT = function (dictMonadIOSync) {
    return new MonadIOSync(function () {
        return Control_Monad_List_Trans.monadListT(dictMonadIOSync.Monad0());
    }, function ($13) {
        return Control_Monad_Trans_Class.lift(Control_Monad_List_Trans.monadTransListT)(dictMonadIOSync.Monad0())(liftIOSync(dictMonadIOSync)($13));
    });
};
var monadIOSyncMaybe = function (dictMonadIOSync) {
    return new MonadIOSync(function () {
        return Control_Monad_Maybe_Trans.monadMaybeT(dictMonadIOSync.Monad0());
    }, function ($14) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonadIOSync.Monad0())(liftIOSync(dictMonadIOSync)($14));
    });
};
var monadIOSyncRWS = function (dictMonadIOSync) {
    return function (dictMonoid) {
        return new MonadIOSync(function () {
            return Control_Monad_RWS_Trans.monadRWST(dictMonadIOSync.Monad0())(dictMonoid);
        }, function ($15) {
            return Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonadIOSync.Monad0())(liftIOSync(dictMonadIOSync)($15));
        });
    };
};
var monadIOSyncReader = function (dictMonadIOSync) {
    return new MonadIOSync(function () {
        return Control_Monad_Reader_Trans.monadReaderT(dictMonadIOSync.Monad0());
    }, function ($16) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadIOSync.Monad0())(liftIOSync(dictMonadIOSync)($16));
    });
};
var monadIOSyncState = function (dictMonadIOSync) {
    return new MonadIOSync(function () {
        return Control_Monad_State_Trans.monadStateT(dictMonadIOSync.Monad0());
    }, function ($17) {
        return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadIOSync.Monad0())(liftIOSync(dictMonadIOSync)($17));
    });
};
var monadIOSyncWriter = function (dictMonadIOSync) {
    return function (dictMonoid) {
        return new MonadIOSync(function () {
            return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictMonadIOSync.Monad0());
        }, function ($18) {
            return Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonadIOSync.Monad0())(liftIOSync(dictMonadIOSync)($18));
        });
    };
};
module.exports = {
    liftIOSync: liftIOSync,
    MonadIOSync: MonadIOSync,
    monadIOSyncIOSync: monadIOSyncIOSync,
    monadIOSyncIO: monadIOSyncIO,
    monadIOSyncContT: monadIOSyncContT,
    monadIOSyncExceptT: monadIOSyncExceptT,
    monadIOSyncListT: monadIOSyncListT,
    monadIOSyncMaybe: monadIOSyncMaybe,
    monadIOSyncReader: monadIOSyncReader,
    monadIOSyncRWS: monadIOSyncRWS,
    monadIOSyncState: monadIOSyncState,
    monadIOSyncWriter: monadIOSyncWriter
};
